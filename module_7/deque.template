using namespace main_savitch_6B;

template <class T>
deque<T>::deque() {}

template <class T>
deque<T>::~deque() {}

template <class T>
deque<T>::deque(const deque<T>& dq) {}

template <class T>
deque<T>& deque<T>::operator=(const deque<T>& dq) {}

template <class T>
T& deque<T>::front() {}

template <class T>
T deque<T>::front() const {}

template <class T>
T& deque<T>::back() {}

template <class T>
T deque<T>::back() const {}

template <class T>
void deque<T>::push_front(const T& entry) {}

template <class T>
void deque<T>::push_back(const T& entry) {}

template <class T>
void deque<T>::pop_front() {}

template <class T>
void deque<T>::pop_back() {}

template <class T>
deque<T>::size_type deque<T>::size() const {}

template <class T>
bool deque<T>::empty() const {}

template <class U>
bool operator==(const deque<U>& dq1, const deque<U>& dq2) {}

template <class U>
std::ostream& operator<<(std::ostream& out, const deque<U>& dq) {}